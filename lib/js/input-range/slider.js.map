{"version":3,"sources":["../../../src/js/input-range/slider.jsx"],"names":["Slider","ariaLabelledby","string","ariaControls","classNames","objectOf","isRequired","formatLabel","func","maxValue","number","minValue","onSliderDrag","onSliderKeyDown","onFocus","onBlur","percentage","type","value","props","node","state","sliderSelected","removeDocumentMouseMoveListener","removeDocumentMouseUpListener","removeDocumentTouchEndListener","removeDocumentTouchMoveListener","event","setState","perc","style","position","left","backgroundColor","selectedColor","color","primaryColor","ownerDocument","addEventListener","handleMouseMove","handleMouseUp","handleTouchMove","handleTouchEnd","removeEventListener","addDocumentMouseMoveListener","addDocumentMouseUpListener","addDocumentTouchEndListener","addDocumentTouchMoveListener","getStyle","sliderStyle","getSliderStyle","labelStyle","getLabelStyle","sliderContainer","slider","handleKeyDown","handleMouseDown","handleTouchStart","Component"],"mappings":"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","file":"slider.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport Label from './label';\n\n/**\n * @ignore\n */\nexport default class Slider extends React.Component {\n  /**\n   * Accepted propTypes of Slider\n   * @override\n   * @return {Object}\n   * @property {Function} ariaLabelledby\n   * @property {Function} ariaControls\n   * @property {Function} className\n   * @property {Function} formatLabel\n   * @property {Function} maxValue\n   * @property {Function} minValue\n   * @property {Function} onSliderDrag\n   * @property {Function} onSliderKeyDown\n   * @property {Function} onFocus\n   * @property {Function} onBlur\n   * @property {Function} percentage\n   * @property {Function} type\n   * @property {Function} value\n   */\n  static get propTypes() {\n    return {\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      formatLabel: PropTypes.func,\n      maxValue: PropTypes.number,\n      minValue: PropTypes.number,\n      onSliderDrag: PropTypes.func.isRequired,\n      onSliderKeyDown: PropTypes.func.isRequired,\n      onFocus: PropTypes.func.isRequired,\n      onBlur: PropTypes.func.isRequired,\n      percentage: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Function} [props.formatLabel]\n   * @param {number} [props.maxValue]\n   * @param {number} [props.minValue]\n   * @param {Function} props.onSliderKeyDown\n   * @param {Function} props.onSliderDrag\n   * @param {Function} props.onFocus\n   * @param {Function} props.onBlur\n   * @param {number} props.percentage\n   * @param {number} props.type\n   * @param {number} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n    this.state = {\n      sliderSelected: false,\n    };\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n    this.removeDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  onBlur(event) {\n    this.setState({ sliderSelected: false });\n    this.props.onBlur(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  onFocus(event) {\n    this.setState({ sliderSelected: true });\n    this.props.onFocus(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getStyle() {\n    const perc = (this.props.percentage || 0) * 100;\n    const style = {\n      position: 'absolute',\n      left: `${perc}%`,\n    };\n\n    return style;\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getSliderStyle() {\n    if (this.state.sliderSelected) {\n      return {\n        backgroundColor: this.props.classNames.selectedColor,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getLabelStyle() {\n    const color = this.state.sliderSelected ? this.props.classNames.selectedColor : this.props.classNames.primaryColor;\n    const style = {\n      color,\n    };\n\n    return style;\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchmove event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchMoveListener() {\n    this.removeDocumentTouchMoveListener();\n    this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchMoveListener() {\n    this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown() {\n    this.setState({ sliderSelected: true });\n    this.addDocumentMouseMoveListener();\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    this.setState({ sliderSelected: false });\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart() {\n    this.setState({ sliderSelected: true });\n    this.addDocumentTouchEndListener();\n    this.addDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchEnd() {\n    this.setState({ sliderSelected: false });\n    this.removeDocumentTouchMoveListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.props.onSliderKeyDown(event, this.props.type);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const style = this.getStyle();\n    const sliderStyle = this.getSliderStyle();\n    const labelStyle = this.getLabelStyle();\n\n    return (\n      <div className={this.props.classNames[`${this.props.type}ValueLabel`]}>\n        <span\n          className={this.props.classNames.sliderContainer}\n          ref={(node) => { this.node = node; }}\n          style={style}>\n          <div\n            aria-labelledby={this.props.ariaLabelledby}\n            aria-controls={this.props.ariaControls}\n            aria-valuemax={this.props.maxValue}\n            aria-valuemin={this.props.minValue}\n            aria-valuenow={this.props.value}\n            className={this.props.classNames.slider}\n            draggable=\"false\"\n            onKeyDown={this.handleKeyDown}\n            onMouseDown={this.handleMouseDown}\n            onTouchStart={this.handleTouchStart}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            role=\"slider\"\n            tabIndex=\"0\"\n            style={sliderStyle} />\n        </span>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"value\"\n          style={labelStyle}>\n          {this.props.value}\n        </Label>\n      </div>\n    );\n  }\n}\n"]}